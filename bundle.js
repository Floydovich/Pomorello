!function(t){var e={};function i(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(r,a,function(e){return t[e]}.bind(null,a));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){t.exports=i(1)},function(t,e,i){"use strict";function r(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}i.r(e);class a{static info(t){a.level>=1&&a.log(t)}static debug(t){a.level>=2&&a.log(t)}static trace(t){a.level>=3&&a.log(t)}}r(a,"level",3),r(a,"log",console.log);let n=null;async function s(){if(a.trace("Initializing notifications..."),"Notification"in window)if("granted"===Notification.permission)n=!1;else{const t=await Notification.requestPermission();n="granted"===t}else n=!1;return a.info(`Notification status: ${n}`),n}async function o(t){if(a.trace("Creating notification..."),null===n&&(a.debug("Notification status is null. Still waiting for permission."),await s()),n)return a.trace("Notifications status positive. Sending notification."),new Notification(t)}async function c(t,e,i){return a.trace("Starting new set"),t.set("card","shared",{POMORELLO_ACTIVE:!0,POMORELLO_BREAK:!1,POMORELLO_START:Date.now(),POMORELLO_SET_LENGTH:e,POMORELLO_BREAK_LENGTH:i})}function l(t,e){return t.refresh?{refresh:t.refresh,...e}:e}function d(t){a.debug(`Displaying empty badge for card ${t.name}`);return l(t,{text:"No Pomodoro Active",color:"yellow"})}function h(t){a.debug(`Displaying break badge for card ${t.name}`);const e={text:`Resting: ${t.timeStr()}`,color:"blue"};return l(t,e)}s();class u{constructor(t=10){a.trace(`Constructing new card with refresh ${t}`),this.is_active=!1,this.is_break=!1,this.start_ms=0,this.set_length=15e5,this.break_length=3e5,this.set_hist={},this.name="?",this.refresh=t}async fetch(t){a.trace("Fetching data");const e=t.card("name");let i=await t.getAll();i=i.card.shared||{},a.trace("Got data"),this.is_active=i.POMORELLO_ACTIVE||this.is_active,this.is_break=i.POMORELLO_BREAK||this.is_break,this.start_ms=i.POMORELLO_START||this.start_ms,this.set_length=i.POMORELLO_SET_LENGTH||this.set_length,this.break_length=i.POMORELLO_BREAK_LENGTH||this.break_length,this.set_hist=i.POMORELLO_SET_HISTORY||this.set_hist,this.name=(await e).name,a.info(JSON.stringify(this,null,2))}async sync(t){return a.trace(`Syncing card ${this.name}`),t.set("card","shared",{POMORELLO_ACTIVE:this.is_active,POMORELLO_BREAK:this.is_break,POMORELLO_START:this.start_ms,POMORELLO_SET_LENGTH:this.set_length,POMORELLO_BREAK_LENGTH:this.break_length,POMORELLO_SET_HISTORY:this.set_hist})}age(){const t=Date.now()-this.start_ms;return a.trace(`Computing age for card ${this.name}: ${t}`),t}timeStr(){let t;a.trace(`Formatting time for card ${this.name}`),this.is_active?t=this.set_length:this.is_break&&(t=this.break_length);const e=t-this.age();let i=Math.floor(e/1e3);return this.refresh&&(i=this.refresh*Math.ceil(i/this.refresh)),a.trace(`Formatting time for card ${this.name}: ${i} seconds`),`${(Math.floor(i/60)%60).toFixed(0).padStart(2,"0")}:${(i%60).toFixed(0).padStart(2,"0")}`}addSet(){a.trace(`Incrementing history of completed set for card ${this.name}`);const t=this.set_hist[this.set_length]||0;this.set_hist[this.set_length]=t+1}}function f(t,e){a.trace("Showing dropdown powerup menu"),t.popup({title:"Start a Pomodoro",items:[{text:"Plain 25/5",callback:(t,e)=>c(t,15e5,3e5)},{text:"Debug 1/0.5",callback:(t,e)=>c(t,6e4,3e4)}]})}window.TrelloPowerUp.initialize({"card-buttons":async(t,e)=>[{text:"Pomorello",callback:f}],"card-badges":async(t,e)=>(a.trace("Loading card-badges"),[{dynamic:async()=>{const e=new u;a.debug("State initialized"),await e.fetch(t),a.info(`State retrieved for card ${e.name}`);const i=e.age();return e.is_active?(a.trace("Pomodoro active"),i>e.set_length?(a.trace("Pomodoro expired"),await async function(t,e){return a.trace(`Pomodoro for card ${e.name} finished.`),o(`Pomodoro for card ${e.name} complete.\nTime to take a break!`),e.is_active=!1,e.is_break=!0,e.start_ms=Date.now(),e.addSet(),e.sync(t)}(t,e),h(e)):(a.trace("Pomodoro in progress"),function(t){a.debug(`Displaying status badge for card ${t.name}`);const e={text:`Pomodoro Active: ${t.timeStr()}`,color:"green"};return l(t,e)}(e))):e.is_break?(a.trace("Break active"),i>e.break_length?(a.trace("Break expired"),await async function(t,e){return a.trace(`Break for card ${e.name} finished.`),o(`Break for card ${e.name} has ended!`),e.is_active=!1,e.is_break=!1,e.sync(t)}(t,e),d(e)):(a.trace("Break in progress"),h(e))):(a.trace("No Pomodoro active"),d(e))}}])})}]);